<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:cedoassets="cn.com.dhcc.fzep.topo.components.assets.*"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:services="services.*"
			   minWidth="955" minHeight="600" applicationComplete="application1_applicationCompleteHandler(event)" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.LinkButton;
			import mx.events.FlexEvent;
			import mx.graphics.SolidColorStroke;
			
			import spark.primitives.Line;
			
			import cn.com.dhcc.fzep.topo.components.assets.SiteContainer;
			import cn.com.dhcc.fzep.topo.utils.ScriptUtils;
			
			import valueObjects.CableVO;
			
			
			private var OFFSET_Y:Number = 33;
			private var CABLE_INFO_FONT_SIZE:Number = 12;
			private var CABLE_INFO_PRE:String = "CABLE_INFO_PRE-";
			private var CABLE_INFO_PRE_REGEX:RegExp = /CABLE_INFO_PRE-/;
			/**
			 * 连接两个站点的光缆
			 */
			protected function connectCable(site1:SiteContainer, site2:SiteContainer):void{
				var site1Cable:ArrayCollection = new ArrayCollection(site1.cableList);
				var site2Cable:ArrayCollection = new ArrayCollection(site2.cableList);
				for (var i:int = 0; i < site1Cable.length; i++) 
				{
					var cable1:CableVO = site1Cable.getItemAt(i) as CableVO;
					for (var j:int = 0; j < site2Cable.length; j++) 
					{
						var cable2:CableVO = site2Cable.getItemAt(i) as CableVO;
						if(cable1.cableId == cable2.cableId){
							var strokes:SolidColorStroke = site1.cableStroke(cable1.cableId);
							
							var pointS:Point = site1.connectionToCable(cable1.cableId);
							var pointE:Point = site2.connectionToCable(cable2.cableId);
							var offsetY:Number = (i%2==0?-OFFSET_Y:OFFSET_Y);
							
							var line:Line = new Line();
							line.xFrom = pointS.x + leftSiteAssetsContainer.x;
							line.yFrom = pointS.y + leftSiteAssetsContainer.y + offsetY;
							line.xTo =  pointE.x + rightSiteAssetsContainer.x ;
							line.yTo = pointE.y + rightSiteAssetsContainer.y + offsetY;
							line.stroke = strokes;
							assetsContainer.addElement(line);
							var cableInfo:LinkButton = new LinkButton();
							cableInfo.id = CABLE_INFO_PRE + cable1.cableId;
							cableInfo.label = "[ " + cable1.cableName + " ]";
							cableInfo.width = cable1.cableName.length * CABLE_INFO_FONT_SIZE;
							cableInfo.height = 25;
							cableInfo.buttonMode = true;
							cableInfo.toolTip = "光缆详细信息";
							//cableInfo.setStyle("fontSize", CABLE_INFO_FONT_SIZE);
							cableInfo.x = (line.xTo + line.xFrom)/2-cableInfo.width/2;// - cableInfo.width/2;
							cableInfo.y = (line.yTo + line.yFrom)/2 - cableInfo.height ;
							cableInfo.addEventListener(MouseEvent.CLICK, function(event:MouseEvent):void{
								var clickedBtn:LinkButton = event.currentTarget as LinkButton;
								var cableId:String = clickedBtn.id.split(CABLE_INFO_PRE_REGEX)[1];
								//Alert.show(cableId+'');
								var pageUrl:String = ScriptUtils.getRoot(root.loaderInfo.url) + "zdy/a_fiberCoreNumber_forward.jsp?cableId=" + cableId;;
								var pageName:String = "光缆详细信息";
								ScriptUtils.openTabWindow(pageUrl,pageName);
							});
							assetsContainer.addElement(cableInfo);
							
							
							var line2:Line = new Line();
							line2.xFrom = pointS.x + leftSiteAssetsContainer.x;
							line2.yFrom = pointS.y + leftSiteAssetsContainer.y + offsetY;
							line2.xTo =  pointS.x + leftSiteAssetsContainer.x ;
							line2.yTo = pointS.y + leftSiteAssetsContainer.y ;
							line2.stroke = strokes;
							assetsContainer.addElement(line2);
							
							var line3:Line = new Line();
							line3.xFrom = pointE.x + rightSiteAssetsContainer.x;
							line3.yFrom = pointE.y + rightSiteAssetsContainer.y;
							line3.xTo =  pointE.x + rightSiteAssetsContainer.x ;
							line3.yTo = pointE.y + rightSiteAssetsContainer.y + offsetY ;
							line3.stroke = strokes;
							assetsContainer.addElement(line3);
							
							break;
						}else{
							continue;
						}
					}
				}
			}
			/**
			 * 链接站点之间的光缆
			 */
			public function connectSite():void{
				connectCable(leftSiteContainer, rightSiteContainer);
			}
			
			protected function application1_applicationCompleteHandler(event:FlexEvent):void
			{
				if(stage){
					var leftSiteId:String = root.loaderInfo.parameters['s1'];
					var rightSiteId:String = root.loaderInfo.parameters['s2'];
					if(leftSiteId&&rightSiteId){
						leftSiteContainer.construct(leftSiteId,rightSiteId,connectSite);
						rightSiteContainer.construct(rightSiteId,leftSiteId,connectSite);
					}
				}
			}
			
		]]>
	</fx:Script>
	<!--
	<mx:ApplicationControlBar>
		<s:Label text="DEMO-仅作展示使用" >
		</s:Label>
	</mx:ApplicationControlBar>
	-->
	<s:Panel title="福州电业局资产关系示意图"
			 width="90%" height="90%" horizontalCenter="0" verticalCenter="0">
		<s:BorderContainer y="60" width="100%" height="66%" verticalCenter="middle"  borderVisible="false">
			<s:layout>
				<s:HorizontalLayout  paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" />
			</s:layout>
			<s:BorderContainer   width="100%" height="100%" verticalCenter="middle" id="assetsContainer" borderVisible="false"  >
				<s:BorderContainer width="45%" height="400" verticalCenter="middle" id="leftSiteAssetsContainer"  borderVisible="false"  cornerRadius="10" >
					<cedoassets:SiteContainer id="leftSiteContainer" ></cedoassets:SiteContainer>
				</s:BorderContainer>
				<s:BorderContainer width="45%" x="{leftSiteContainer.width+50}" height="400" id="rightSiteAssetsContainer" verticalCenter="middle"  borderVisible="false"  cornerRadius="10" >
					<cedoassets:SiteContainer id="rightSiteContainer" ></cedoassets:SiteContainer>
				</s:BorderContainer>
			</s:BorderContainer>
		</s:BorderContainer>
	</s:Panel>
</s:Application>
