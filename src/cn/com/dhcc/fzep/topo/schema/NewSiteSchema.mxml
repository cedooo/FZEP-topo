<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:cedo="cn.com.dhcc.fzep.topo.components.*"
			   xmlns:xtreme="xtreme.core.*"
			   xmlns:services="services.*"
			   minWidth="955" minHeight="600" applicationComplete="applicationComplete()"
			    >
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace xtreme "xtreme.core.*";
	</fx:Style>
	<fx:Declarations>
		
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:TitleWindow id="showInfoWin" width="280" title="详细信息" close="showInfoWin_closeHandler(event)" >
				<mx:DataGrid id="headerShowInfo" showHeaders="false" width="30%" 
							 borderVisible="false" textAlign="right" rowCount="5">
					<mx:dataProvider>
						<fx:Object name="名        称" />
						<fx:Object name="地        址" />
						<fx:Object name="负  责  人" />
						<fx:Object name="联系电话" />
						<fx:Object name="备        注" />
					</mx:dataProvider>
					<mx:columns >
						<mx:DataGridColumn dataField="name" fontWeight="normal" />
					</mx:columns>
				</mx:DataGrid>
				<mx:DataGrid id="siteInfoGrid" x="{headerShowInfo.width}" showHeaders="false" width="75%"
							 borderVisible="false"  rowCount="5">
					<mx:columns>
						<mx:DataGridColumn dataField="name" wordWrap="true" />
					</mx:columns>
				</mx:DataGrid>
		</s:TitleWindow>
		<s:CallResponder id="getListByAreaResult"/>
		<services:SiteSchema id="siteSchema"
							 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
							 showBusyCursor="true"/>
		<s:CallResponder id="saveSchemaResult"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import flash.ux.core.Console;
			
			import mx.collections.IList;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import cn.com.dhcc.fzep.topo.components.ElementSelector;
			import cn.com.dhcc.fzep.topo.components.SiteComponent;
			import cn.com.dhcc.fzep.topo.utils.TopoXMLUtils;
			
			import valueObjects.Carrier;
			import valueObjects.Schema;
			import valueObjects.Site;
			
			import xtreme.core.Root;
			import xtreme.scene.SceneManager;
			import xtreme.scene.entity.shapes.FlexComponent;
			/**
			[Bindable]
			public var siteId:Array = new Array();
			 * */
			[Bindable]
			public var areaId:Array = new Array();
			public var dSelectWidth:int;
			private function applicationComplete() : void
			{
				var siO:Object = root.loaderInfo.parameters['areaId'];
				if(siO){
					var si:String = siO.toString();//root.loaderInfo.parameters['siteID'];
					if(si){
						areaId.push(si); 
					}else {
						Alert.show("区域ID无效", "参数错误");
					}
				}else{
					areaId.push('');
				}
				stage.align = StageAlign.TOP_LEFT;
				stage.scaleMode = StageScaleMode.NO_SCALE;
				stage.quality = StageQuality.HIGH;
				this.contextMenu.hideBuiltInItems();
				var console:Console = Console.instance;
				if (console == null)
					console = new Console(stage);
				view.getRoot().layerManager.enableContextMenu();
				view.registerBuildInCommand(console);
				view.getRoot().navigationView.visible = true;
				
				dSelectWidth = operGroup.width;
				
				schemaName.text = "新建视图";
				
				//默认3层交换机
				selector.getResult = getListByAreaResult;
				selector.showField = "siteName";
				selector.refreshSelectorData = getListByArea;
				getListByArea(areaId);
				
			}
			
			public function clearup() : void
			{
				// 清空场景
				Root.instance.sceneManager.clearScene();
			}
			
			private function addEquip(arr:IList):void {
				for (var i:int = 0; i < arr.length; i++) 
				{
					var sceneMgr:SceneManager = Root.instance.sceneManager;
					var equipO:Object = arr.getItemAt(i);
					var equip:UIComponent;
					var fcName:String;
					if(equipO is Site){
						var siteComponent:SiteComponent = new SiteComponent();
						siteComponent.site = equipO as Site;
						siteComponent.doShowSite = show;
						equip = siteComponent;
						fcName = ObjectUtil.getClassInfo(Carrier).name + siteComponent.site.siteId;
					}
					if(!sceneMgr.existsEntity(fcName)){
						var equipFC:FlexComponent = new FlexComponent(fcName, equip);
						equipFC.draggable = true;
						equipFC.x = sceneMgr.viewport.x + 10;
						equipFC.y = sceneMgr.viewport.y + 70*(i+1);
						equipFC.width = 60;
						equipFC.height = 60;
						sceneMgr.addEntity(equipFC);
					}else{
						Alert.show("设备已存在,不能重复添加。");
					}
				}
			}
			
			
			public function show(site:Site):void{
				//Alert.show( site.siteName + site.siteAdress +  site.connactName +  site.connactNumber +  site.descp);
				showInfoWin.title = site.siteName;    
				
				PopUpManager.addPopUp(showInfoWin, this, true);  
				PopUpManager.centerPopUp(showInfoWin);  
				siteInfoGrid.dataProvider = new Array(
					//{name: area.areaId},
					{name: site.siteName },
					{name: site.siteAdress},
					{name: site.connactName},
					{name: site.connactNumber},
					{name: site.descp}
				);
			}
			
			/**
			 * 关闭信息展示弹出窗口
			 */
			protected function showInfoWin_closeHandler(event:CloseEvent):void { 
				PopUpManager.removePopUp(showInfoWin);   
			}   
			
			protected function hide_clickHandler(event:MouseEvent):void
			{
				if(operGroup.visible){
					operGroup.width = -1;
					operGroup.visible = false;
				}else{
					operGroup.width = dSelectWidth;
					operGroup.visible = true;
				}
			}
						
			/**
			 * 保存拓扑图 
			 */
			protected function saveSchema_clickHandler(event:MouseEvent):void
			{
				if(areaId[0]){
					Alert.yesLabel = "保存";
					Alert.cancelLabel = "取消";
					Alert.show("确认保存?", "视图名称 : " + schemaName.text , Alert.YES | Alert.CANCEL, this,doSaveSchema);
				}else{
					Alert.show("无区域参数,无法添加。","出错了");
				}
				
			}
			/**
			 * 执行保存视图(区域参数必须是合法值时才能调用该方法)
			 */
			private function doSaveSchema(event:CloseEvent):void {
				if(event.detail == Alert.YES && areaId[0])
				{
					var sceneMgr:SceneManager = Root.instance.sceneManager;
					var equipJSONData:String = TopoXMLUtils.generateJSON(sceneMgr.entityList());
					Alert.show(equipJSONData);
					var argsObj:Object = new Object();
					argsObj.viewX = sceneMgr.viewport.x;
					argsObj.viewY = sceneMgr.viewport.y;
					
					var schema:Schema = new Schema();
						schema.areaId = areaId[0];
						schema.schemaType = "3";
					schema.schemaName = schemaName.text;
					schema.schemaNote = schemaNote.text;
					var args:String = JSON.encode(argsObj);
					var base:String = JSON.encode(schema);
					saveSchema2(base, equipJSONData, args);
				}
			}
			/**
			 * 搜索光缆图
			 */
			protected function buildCable_clickHandler(event:MouseEvent):void
			{
				
			}
			
		
			protected function saveSchemaResult_resultHandler(event:ResultEvent):void
			{
				Alert.okLabel = "继续编辑";
				Alert.cancelLabel = "关闭窗口";
				if(event.result==true){
					Alert.show("保存成功", "执行结果", Alert.CANCEL, this, closeBrowserWindow);
				}else{
					Alert.show( "保存失败", "执行结果", Alert.OK, this, closeBrowserWindow);
				}
			}
			protected function  closeBrowserWindow(event:CloseEvent):void {
				if(event.detail == Alert.CANCEL){
					navigateToURL(new URLRequest('javascript:window.opener=null;window.close()'),'_self')
				}
			}
			
			protected function getListByArea(arg0:String):void
			{
				getListByAreaResult.token = siteSchema.getListByArea(arg0);
			}
			
			
			protected function saveSchema2(arg0:String, arg1:String, arg2:String):void
			{
				saveSchemaResult.token = siteSchema.saveSchema(arg0, arg1, arg2);
			}
			
		]]>
	</fx:Script>
		
	<s:layout>
		<s:HorizontalLayout gap="0" paddingBottom="0" paddingLeft="0" paddingRight="0" >
		</s:HorizontalLayout>
	</s:layout>
	
	<s:VGroup id="operGroup" height="100%" gap="0" >	
		<cedo:ElementSelector id="selector" selectedItem="addEquip"  args="{siteId}" ></cedo:ElementSelector>
	</s:VGroup>
	<s:VGroup id="hide" width="10" height="100%" gap="0"
			  click="hide_clickHandler(event)" opaqueBackground="0xe8e8e8">
	</s:VGroup>
		
	<s:Group width="100%" height="100%" x="0" y="5" >
		<!--creationComplete="group1_creationCompleteHandler(event)"  >-->
		<xtreme:XtremeComponent name="view" id="view" width="100%" height="100%" />
		<s:BorderContainer backgroundAlpha="0" height="{schemaName.height}" borderVisible="false">
			<s:layout>
				<s:HorizontalLayout>
				</s:HorizontalLayout>
			</s:layout>
			<mx:Text text="名称:" id="lbName"  />
			<s:TextInput id="schemaName" maxChars="15"  >
			</s:TextInput>
			<!--
			<mx:Image source="@Embed(source='assets/btn_note_16.png')"  toolTip="备注"/>
			-->
			<mx:Text text="备注:" id="lbNote"  />
			<s:TextInput id="schemaNote" maxChars="15" >
				</s:TextInput>
			<s:Button id="saveSchema"  click="saveSchema_clickHandler(event)">
				<fx:String>保存</fx:String>
			</s:Button>
			<s:Button id="buildCable"  click="buildCable_clickHandler(event)">
				<fx:String>光缆</fx:String>
			</s:Button>
		</s:BorderContainer>
	</s:Group>
</s:Application>
