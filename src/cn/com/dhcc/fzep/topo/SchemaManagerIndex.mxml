<?xml version="1.0" encoding="utf-8"?>
<!-- Simple example to demonstrate the Halo Tree control. -->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:services="services.*"
			   applicationComplete="init()">
	
	<fx:Declarations>
		<s:CallResponder id="getAllAreaResult" result="getAllAreaResult_resultHandler(event)"/>
		<services:AreaSchema id="areaSchema"
							 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
							 showBusyCursor="true"/>
		<s:CallResponder id="getRootNodeResult" result="getRootNodeResult_resultHandler(event)"/>
		<services:SchemaManage id="schemaTree2"
							 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
							 showBusyCursor="true"/>
		<s:CallResponder id="saveSchemaBriefInfoResult" result="saveSchemaBriefInfoResult_resultHandler(event)"/>
		<s:CallResponder id="getSchemaBriefInfoByAreaIdResult" result="getSchemaBriefInfoByAreaIdResult_resultHandler(event)"/>
		<s:CallResponder id="addSchemaResult" result="addSchemaResult_resultHandler(event)"/>
		<s:CallResponder id="setDefaultSchemaResult" result="setDefaultSchemaResult_resultHandler(event)"/>
	</fx:Declarations>
	<fx:Style>
		@namespace services "services.*";
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.TreeEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.TextOperationEvent;
			
			import cn.com.dhcc.fzep.topo.utils.ScriptUtils;
			
			import valueObjects.Area;
			import valueObjects.Schema;
			import valueObjects.SchemaTreeNode;
			import valueObjects.Site;
			
			[Bindable]
			public var selectedNode:XML;
			[Bindable]
			private var basePath:String = '';
			[Bindable]
			private var topoBasePath:String = '';
			private function showInfo():void{
			}
			//初始化函数   
			private function init():void{
				basePath= ScriptUtils.getRoot(root.loaderInfo.url);
				topoBasePath = basePath + "topo/";

				getRootNode();
			}
			[Bindable]
			private var treeData:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var selected:SchemaTreeNode;
			[Bindable]
			private var emptyData:ArrayCollection = new ArrayCollection();
			
			protected function getAllArea():void
			{
				getAllAreaResult.token = areaSchema.getAllArea();
			}
			[Bindable]
			private var TREE_NODE_AREA:String = "area";
			protected function getAllAreaResult_resultHandler(event:ResultEvent):void
			{
				var arrayList:ArrayCollection=new ArrayCollection();				
				arrayList = event.result as ArrayCollection;
				var arrayNode:ArrayCollection=new ArrayCollection();
				for (var i:int = 0; i < arrayList.length; i++) 
				{
					var areaNode:SchemaTreeNode = new SchemaTreeNode();
					var area:Area = arrayList[i] as Area;
					areaNode.name = area.areaName;
					//areaNode.children = emptyData;
					areaNode.type = TREE_NODE_AREA;
					areaNode.id = area.areaId;
					arrayNode.addItem(areaNode);
				}
				selected.children = arrayNode;
				treeData.itemUpdated(selected, true, true);
			}
			
			protected function schemaTree_itemOpenHandler(event:TreeEvent):void
			{
				selected = event.item as SchemaTreeNode;
				if(event.item.type == "levelSchema"){
					getAllArea();
				}
			}
			
			protected function getRootNode():void
			{
				getRootNodeResult.token = schemaTree2.getRootNode();
			}
			
			protected function getRootNodeResult_resultHandler(event:ResultEvent):void
			{
				treeData = event.result as ArrayCollection;
			}
			
			protected function getListByAreaResult_resultHandler(event:ResultEvent):void
			{
				var arrayList:ArrayCollection=new ArrayCollection();				
				arrayList = event.result as ArrayCollection;
				var arrayNode:ArrayCollection=new ArrayCollection();
				for (var i:int = 0; i < arrayList.length; i++) 
				{
					var siteNode:SchemaTreeNode = new SchemaTreeNode();
					var site:Site = arrayList[i] as Site;
					siteNode.name = site.siteName;
					siteNode.children = emptyData;
					siteNode.type = "site";
					siteNode.id = site.siteId;
					arrayNode.addItem(siteNode);
				}
				selected.children = arrayNode;
				treeData.itemUpdated(selected, true, true);
			}

			protected function getListSchemaBySiteIDResult_resultHandler(event:ResultEvent):void
			{
				var arrayList:ArrayCollection=new ArrayCollection();				
				arrayList = event.result as ArrayCollection;
				var arrayNode:ArrayCollection=new ArrayCollection();
				for (var i:int = 0; i < arrayList.length; i++) 
				{
					var siteNode:SchemaTreeNode = new SchemaTreeNode();
					var schema:Schema = arrayList[i] as Schema;
					siteNode.name = schema.schemaName;
					//siteNode.children = emptyData;
					siteNode.type = "schema";
					siteNode.id = schema.schemaId;
					arrayNode.addItem(siteNode);
					
				}
				selected.children = arrayNode;
				treeData.itemUpdated(selected, true, true);
			}
			
			protected function schemaTree_clickHandler(event:MouseEvent):void
			{
				var item:SchemaTreeNode = schemaTree.selectedItem as SchemaTreeNode;
				if (TREE_NODE_AREA== item.type){    //站点视图
					var areaId:String = item.id;
					getSchemaBriefInfoByAreaId(areaId);
					
					areaName.text = item.name;
				}
			}
			
			protected function add_clickHandler(event:MouseEvent):void
			{
				var item:SchemaTreeNode = schemaTree.selectedItem as SchemaTreeNode;
				if(item.type == "site"){
					ScriptUtils.openTabWindow(topoBasePath + "addView.jsp?siteID="+item.id,"添加站点视图"); 
				}else if(item.type == "customerSchema"){
					ScriptUtils.openTabWindow(topoBasePath + "addView.jsp","添加站点视图"); 
				}else {
					Alert.show("非法操作","操作无效");
				}
			}
			
			protected function editEnable_clickHandler(event:MouseEvent):void
			{
				sName.editable =  true;
				sNote.editable =  true;
			}
			protected function editSchema_clickHandler(event:MouseEvent):void
			{
				if(sId.text){
					ScriptUtils.openTabWindow(basePath + "topo/editAreaSiteSchema.jsp?schemaID=" + sId.text , "编辑"); 
				}
			}
			/**
			 * 保存概要信息
			 */
			protected function saveSchemaBriefInfo(arg0:String):void
			{
				saveSchemaBriefInfoResult.token = schemaTree2.saveSchemaBriefInfo(arg0);
			}
			/**
			 * 保存结果提示
			 */
			protected function saveSchemaBriefInfoResult_resultHandler(event:ResultEvent):void { 
				Alert.show(event.result?"保存成功":"保存失败","操作结果"); 
				if(event.result){
					modified = false;
				}
			}
			
			protected function save_clickHandler(event:MouseEvent):void
			{
				if(sId.text.match(/\d+/)){
					var schema:Schema = new Schema();
					schema.schemaId = sId.text;
					schema.schemaName = sName.text;
					schema.schemaNote = sNote.text;
					var json:String = JSON.encode(schema);
					//Alert.show(json);
					saveSchemaBriefInfo(json);
				}else{
					Alert.show('未选择视图','错误');
				}
			}
			
			protected function getSchemaBriefInfoByAreaId(arg0:String):void
			{
				getSchemaBriefInfoByAreaIdResult.token = schemaTree2.getSchemaBriefInfoByAreaId(arg0);
			}
			[Bindable]
			protected var modified:Boolean = false;
			[Bindable]
			protected var noSchema:Boolean = true;
			[Bindable]
			protected var defautlSettable:Boolean = false;
			protected function getSchemaBriefInfoByAreaIdResult_resultHandler(event:ResultEvent):void
			{
				if(event.result){
					var schema:Schema = event.result as Schema;				
					sName.text = schema.schemaName;
					sNote.text = schema.schemaNote;
					sId.text = schema.schemaId;
					sCreateTime.text = schema.schemaAddTime;
					noSchema = false;
					defautlSettable = schema.isDefault!='Y';// Boolean(schema.isDefault);
				}else{
					Alert.yesLabel = "新建";
					Alert.noLabel = "以后再说";
					sName.text = areaName.text + "新建站点视图";
					sNote.text = "";
					sId.text = "";
					sCreateTime.text = "";
					modified = false;
					noSchema = true;
					defautlSettable = false;
					//Alert.show("该区域还没有关注站点视图，是否新建？","提示", Alert.YES|Alert.NO, this, alertClickHandler);
				}
				defaultSchemaBtn.label = defautlSettable?"设置成默认视图":"默认视图";
			}
			private function alertClickHandler(evt:CloseEvent):void {
				var item:SchemaTreeNode = schemaTree.selectedItem as SchemaTreeNode;
				if (evt.detail == Alert.YES) {
					if(item.id){
						var url:String = basePath + "topo/addSiteView.jsp?areaId=" + item.id;
						ScriptUtils.openTabWindow(url , "添加"); 
					}
				} else {
				}
			}

			protected function viewSchema_clickHandler(event:MouseEvent):void
			{
				if(sId.text.match(/\d+/)){
					var url:String = basePath + "topo/view.jsp?schemaID=" + sId.text;
					ScriptUtils.openTabWindow(url , "查看"); 
				}
			}
			protected function newSchema_clickHandler(event:MouseEvent):void{
				var item:SchemaTreeNode = schemaTree.selectedItem as SchemaTreeNode;
				/*
				if(item.id){
					var url:String = basePath + "topo/addSiteView.jsp?areaId=" + item.id;
					ScriptUtils.openTabWindow(url , "添加"); 
				}
				*/
				if(item.id){
					var schema:Schema = new Schema();
					schema.areaId = item.id;
					schema.schemaName = sName.text;
					schema.schemaNote = sNote.text;
					addSchema(schema);
				}
			}
			
			protected function sName_changeHandler(event:Event):void
			{
				if(newSchemaBtn.enabled==false){
					modified = true;
				}
			}
			
			protected function sNote_changeHandler(event:TextOperationEvent):void
			{
				sName_changeHandler(event);
			}
			
			
			protected function addSchema(arg0:Schema):void
			{
				addSchemaResult.token = schemaTree2.addSchema(arg0);
			}
			
			protected function addSchemaResult_resultHandler(event:ResultEvent):void
			{
				var item:SchemaTreeNode = schemaTree.selectedItem as SchemaTreeNode;
				if (TREE_NODE_AREA== item.type){    //站点视图
					var areaId:String = item.id;
					getSchemaBriefInfoByAreaId(areaId);
				}
				Alert.show(event.result?"添加成功":"添加失败","操作结果");
			}
			
			protected function defaultSchemaBtn_clickHandler(event:MouseEvent):void
			{
				var schema:Schema = new Schema();
				schema.schemaId = sId.text;
				
				setDefaultSchema(schema);
			}
			
			
			protected function setDefaultSchema(arg0:Schema):void
			{
				setDefaultSchemaResult.token = schemaTree2.setDefaultSchema(arg0);
			}
			
			protected function setDefaultSchemaResult_resultHandler(event:ResultEvent):void
			{
				var item:SchemaTreeNode = schemaTree.selectedItem as SchemaTreeNode;
				if (TREE_NODE_AREA== item.type){    //站点视图
					var areaId:String = item.id;
					getSchemaBriefInfoByAreaId(areaId);
				}
				Alert.show(event.result?"已设置成默认":"设置失败","操作结果");	
			}
			
		]]>
	</fx:Script>
	
	
	<s:Panel title="福州电业局视图管理"
			 width="100%" height="100%"
			 horizontalCenter="0" verticalCenter="0">
		<s:VGroup left="10" right="10" top="10" bottom="10" >
			<mx:HBox id="schmaOperBtns">
				<!--
				<mx:Image id="refresh" click="getRootNode()"  source="@Embed(source='assets/btn_refresh_16_2.png')"  buttonMode="true"  toolTip="刷新"/>
				<mx:Image id="add" click="add_clickHandler(event)" source="@Embed(source='assets/btn_add_16_3.png')" buttonMode="true"  toolTip="添加"/>
				<mx:Image id="del" click="del_clickHandler(event)" source="@Embed(source='assets/btn_del_16.png')" buttonMode="true"  toolTip="删除"/>
				<mx:Image id="edit" click="edit_clickHandler(event)" source="@Embed(source='assets/btn_edit_16.png')" buttonMode="true"  toolTip="编辑"/>
				-->
			</mx:HBox>
			<mx:HDividedBox width="100%" height="100%" >
				<mx:Tree  id="schemaTree" width="20%" height="100%" labelField="name" itemOpen="schemaTree_itemOpenHandler(event)"
						 showRoot="true" dataProvider="{treeData}" click="schemaTree_clickHandler(event)" 
						 defaultLeafIcon="@Embed(source='assets/view_16.png')"  />
				<s:BorderContainer id="rightArea" height="100%" width="80%"  backgroundAlpha="0.0" >
					<s:layout>
						<s:VerticalLayout>
						</s:VerticalLayout>
					</s:layout>
					<!--
					<s:BorderContainer id="rightAreaBtns" width="100%" height="26" borderVisible="false"  backgroundAlpha="0.0">
						<mx:HBox id="saveOperBtns" left="10" top="10">
							<mx:Image id="save" visible="false"   source="@Embed(source='assets/btn_save_16.png')" click="save_clickHandler(event)"  buttonMode="true"  toolTip="保存"/>
							<mx:LinkButton label="保存" click="save_clickHandler(event)" id="save" />
							<mx:Image id="cancel"  source="@Embed(source='assets/btn_cancel_16.png')" buttonMode="true"  toolTip="取消"/>
						</mx:HBox>
					</s:BorderContainer>
					-->
					<s:BorderContainer id="rightAreaContent" width="100%" height="100%" borderVisible="false"  left="10"  backgroundAlpha="0.0">
						<s:layout>
							<s:VerticalLayout  paddingLeft="10" >
							</s:VerticalLayout>
						</s:layout>
							
						<mx:Form width="100%" >
							<mx:FormItem label="区域名称">
								<mx:TextInput id="areaName" width="200"  maxChars="15" editable="false"/>
							</mx:FormItem>
							<mx:FormItem label="视图名称">
								<mx:TextInput id="sName" width="200"  maxChars="15" editable="true" change="sName_changeHandler(event)"/>
							</mx:FormItem>
							<mx:FormItem label="创建时间">
								<mx:Label id="sCreateTime"  />
							</mx:FormItem>
							<mx:FormItem label="备注信息">
								<s:TextArea id="sNote" width="200" maxChars="512" editable="true" change="sNote_changeHandler(event)" />
							</mx:FormItem>
							<mx:FormItem label="视图ID" visible="false">
								<mx:TextInput id="sId"  maxChars="15"   editable="false"  />
							</mx:FormItem>
						</mx:Form>
 <!--
						<s:Label id="editSchema" text="编辑视图" visible="false" click="editSchema_clickHandler(event)" buttonMode="true" textDecoration="underline">
						</s:Label>
						<s:Label id="viewSchema" text="查看视图" visible="false" click="viewSchema_clickHandler(event)" buttonMode="true" fontWeight="bold">
						</s:Label>
				-->		
						<mx:HBox backgroundAlpha="0"  horizontalAlign="left" width="100%" paddingTop="5" paddingLeft="5">
							<mx:LinkButton id="saveBriefBtn"  label="保存修改" click="save_clickHandler(event)" enabled="{modified}"  /> 
							<mx:LinkButton id="editSchemaBtn"  label="编辑视图" click="editSchema_clickHandler(event)" enabled="{!noSchema}"  /> 
							<mx:LinkButton id="viewSchemaBtn"  label="查看视图" click="viewSchema_clickHandler(event)" enabled="{!noSchema}"  /> 
							<mx:LinkButton id="newSchemaBtn"  label="新建并保存" click="newSchema_clickHandler(event)" enabled="{noSchema}" /> 
							
							<mx:LinkButton id="defaultSchemaBtn"  label="设置成默认视图" click="defaultSchemaBtn_clickHandler(event)" enabled="{defautlSettable}" /> 
						</mx:HBox>
					</s:BorderContainer>
				</s:BorderContainer>
			</mx:HDividedBox>
		</s:VGroup>
	</s:Panel>
	
</s:Application>
