<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:xtreme="xtreme.core.*"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:services="services.*"
			   minWidth="955" minHeight="600" applicationComplete="applicationComplete();">
	<fx:Script>
		<![CDATA[
			import flash.ux.core.Console;
			import flash.ux.utils.MathUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			
			import cn.com.dhcc.fzep.topo.components.SiteComponent;
			
			import valueObjects.Site;
			import valueObjects.SiteRelation;
			
			import xtreme.core.Root;
			import xtreme.scene.SceneManager;
			import xtreme.scene.entity.shapes.DynamicConnector;
			import xtreme.scene.entity.shapes.FlexComponent;
			private function applicationComplete() : void
			{
				
				//getSchema(schemaID);
				stage.align = StageAlign.TOP_LEFT;
				stage.scaleMode = StageScaleMode.NO_SCALE;
				stage.quality = StageQuality.HIGH;
				this.contextMenu.hideBuiltInItems();
				var console:Console = Console.instance;
				if (console == null)
					console = new Console(stage);
				view.getRoot().layerManager.enableContextMenu();
				view.registerBuildInCommand(console);
				view.getRoot().navigationView.visible = true;
				
				getSiteRelationBySiteName("站点1",1);
				
			}
			
			protected function getSiteRelationBySiteName(arg0:String, arg1:int):void
			{
				getSiteRelationBySiteNameResult.token = siteSchema.getSiteRelationBySiteName(arg0, arg1);
			}
			
			protected function getSiteRelationBySiteNameResult_resultHandler(event:ResultEvent):void
			{
				clearup();
				var sceneMgr:SceneManager = Root.instance.sceneManager;
				
				var siteRelation:SiteRelation = event.result as SiteRelation;
				var siteComponent:SiteComponent = new SiteComponent();
				siteComponent.site = siteRelation.center;
				var center:FlexComponent = new FlexComponent("site_" + siteComponent.site.siteId, siteComponent);
				center.width = 60;
				center.height = 60;
				center.x = 210;
				center.y = 210;
				center.draggable = false;
				
				sceneMgr.addEntity(center);
				
				
				var radius:Number;
				radius = 150;
				var angle:Number = 45;    //初始位置偏转角度
				var leveOneList:ArrayCollection = siteRelation.levelOneSite;
				for (var i:int = 0; i < leveOneList.length; i++) 
				{
					var siteLevelOneComp:SiteComponent = new SiteComponent();
					siteLevelOneComp.site = leveOneList.getItemAt(i) as Site;
					var flexCom:FlexComponent = new FlexComponent("site_" + siteLevelOneComp.site.siteId, siteLevelOneComp);
					flexCom.draggable = true;
					
					//flexCom.width = 60;
					//flexCom.height = 60;
					
					// 计算面板位置
					var rad:Number = angle * MathUtil.DEG_2_RAD;
					flexCom.x = center.x + Math.sin(rad) * radius;
					flexCom.y = center.y + Math.cos(rad) * radius;
					angle += 36;
					sceneMgr.addEntity(flexCom);
				}
				
				
				//光缆颜色
				var lineColors:Array = [0xFF3F33, 0xFF8433, 0xFFB133, 0xFCDB34, 0xF9FF33,
					0xBFE43A, 0x36DB43, 0x3DA4D8, 0x3D74DA, 0x543CD9];
				
				var cableList:ArrayCollection = siteRelation.listCable;
				//Alert.show(cableList.length +"");
				for (var j:int = 0; j < cableList.length; j++) 
				{
					var cableObj:Object = cableList.getItemAt(j);
					var startID:String = cableObj["cableStartId"];
					var endID:String = cableObj["cableEndId"];
					var startComponent:FlexComponent = sceneMgr.getEntity("site_" + startID) as FlexComponent;
					var endComponent:FlexComponent = sceneMgr.getEntity("site_" + endID) as FlexComponent;
					
					if(startComponent && endComponent){
						var connector:DynamicConnector = new DynamicConnector("connector_" + j);
						connector.lineThickness = 2;
						connector.lineColor = lineColors[lineColors.length%j];
						connector.connect(startComponent.centerAnchor, endComponent.centerAnchor);
						connector.alpha = 0.5;
						sceneMgr.addEntity(connector);
					}
				}
				
				
			}
			public function clearup() : void
			{
				// 清空场景
				Root.instance.sceneManager.clearScene();
			}
			protected function button1_clickHandler(event:MouseEvent):void
			{
				if(siteName.text.match(/.{1,15}/)){
					getSiteRelationBySiteName(siteName.text, 1);
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="getSiteRelationBySiteNameResult" result="getSiteRelationBySiteNameResult_resultHandler(event)"/>
		<services:SiteSchema id="siteSchema"
							 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
							 showBusyCursor="true"/>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Panel title="搜素关系" width="100%" height="100%">
		<s:layout>
			<s:HorizontalLayout />			
		</s:layout>
		<s:TextInput id="siteName" >
		</s:TextInput>
		<s:Button label="搜索" click="button1_clickHandler(event)" />
		<s:Group id="xContainer" width="100%" height="100%" x="0" y="0" >
			<xtreme:XtremeComponent name="view" id="view" width="100%" height="100%" />
		</s:Group>
	</s:Panel>
	
</s:Application>
