<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   xmlns:xtreme="xtreme.core.*"
			   creationComplete="init()"
			   applicationComplete="applicationComplete()">
		<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace xtreme "xtreme.core.*";
	</fx:Style>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.ux.core.Console;
			import flash.ux.utils.MathUtil;
			
			import mx.controls.Image;
			
			import spark.components.Panel;
			
			import xtreme.core.Root;
			import xtreme.scene.SceneManager;
			import xtreme.scene.entity.Entity;
			import xtreme.scene.entity.shapes.DynamicConnector;
			import xtreme.scene.entity.shapes.FlexComponent;
			public function clearup() : void
			{
				// 清空场景
				Root.instance.sceneManager.clearScene();
			}
			private function applicationComplete() : void
			{
				stage.align = StageAlign.TOP_LEFT;
				stage.scaleMode = StageScaleMode.NO_SCALE;
				stage.quality = StageQuality.HIGH;
				
				//framework.setElementIndex(toolbar, framework.numElements - 1);
				
				this.contextMenu.hideBuiltInItems();
				
				var console:Console = Console.instance;
				if (console == null)
					console = new Console(stage);
				
				view.getRoot().layerManager.enableContextMenu();
				
				view.registerBuildInCommand(console);
				
				//view.getRoot().effectGenerator.showViewportBackground();
				view.getRoot().navigationView.visible = true;
				
				//view.getRoot().layerManager.enableContextMenu();
				
				/*this.addEventListener(KeyboardEvent.KEY_DOWN, function(event:KeyboardEvent):void {
				trace("code:" + event.keyCode);
				});*/
			}
			public function init():void {
				var _panels:Array;
				_panels = new Array();
				for (var j:uint = 0; j < 200; ++j)
				{
					var panelj:Panel = new Panel();
					panelj.width = 180;
					panelj.height = 120;
					panelj.title = "Panel_" + (j + 1);
					panelj.setStyle("dropShadowVisible", false);
					panelj.setStyle("titleBackgroundSkin", "");
					_panels.push(panelj);
				}
				var lineColors:Array = [0xFF3F33, 0xFF8433, 0xFFB133, 0xFCDB34, 0xF9FF33,
					0xBFE43A, 0x36DB43, 0x3DA4D8, 0x3D74DA, 0x543CD9];
				
				clearup();
				
				var sceneMgr:SceneManager = Root.instance.sceneManager;
				
				var center:FlexComponent = new FlexComponent("center", _panels[0]);
				center.draggable = true;
				sceneMgr.addEntity(center);
				center.x = 500;
				center.y = 300;
				
				var x:Number, y:Number, radius:Number;
				radius = 300;
				var angle:Number = 0;
				var i:uint, size:uint;
				for (i = 0, size = 10; i < size; ++i)
				{
					var panel:FlexComponent = new FlexComponent("panel" + i, _panels[i + 1]);
					panel.draggable = true;
					sceneMgr.addEntity(panel);
					
					// 计算面板位置
					var rad:Number = angle * MathUtil.DEG_2_RAD;
					x = center.x + Math.sin(rad) * radius;
					y = center.y + Math.cos(rad) * radius;
					panel.x = x;
					panel.y = y;
					angle += 36;
					
					// 建立连接线
					var connector:DynamicConnector = new DynamicConnector("dc" + i);
					connector.lineThickness = 4;
					connector.lineColor = 0x3CB371;
					connector.connect(center.centerAnchor, panel.centerAnchor);
					sceneMgr.addEntity(connector);
				}
				var panel2:FlexComponent = sceneMgr.getEntity("panel7") as FlexComponent;
				var panel4:FlexComponent = sceneMgr.getEntity("panel4") as FlexComponent;
				var connector24:DynamicConnector = new DynamicConnector("dc24");
				connector24.lineThickness = 4;
				connector24.lineColor = 0xFF3F33;
				connector24.connect(panel2.centerAnchor, panel4.centerAnchor);
				sceneMgr.addEntity(connector24);
				
				var img:Image = new Image();
				img.source = "assets/car.png";
				img.width = 100;
				img.height = 100;
				img.x = 10;
				img.y = 100;
				
				var panelCar:FlexComponent = new FlexComponent("panelcar", img);
				panelCar.x = 700;
				panelCar.y = 300;
				panelCar.draggable = true;
				sceneMgr.addEntity(panelCar);
				var cc:DynamicConnector = new DynamicConnector("dccar");
				cc.lineThickness = 2;
				cc.alpha = 0.9;
				cc.lineColor = lineColors[7];
				cc.connect(panel2.centerAnchor, panelCar.centerAnchor);
				cc.beginningArrow = true;
				cc.endArrow = true;
				cc.selectable = true;
				sceneMgr.addEntity(cc);
				
				var cc2:DynamicConnector = new DynamicConnector("dccar2");
				cc2.lineThickness = 4;
				cc2.alpha = 0.9;
				cc2.lineColor = lineColors[4];
				cc2.connect(panel2.centerAnchor, panelCar.centerAnchor);
				cc2.beginningArrow = true;
				cc2.endArrow = true;
				cc2.selectable = true;
				sceneMgr.addEntity(cc2);
				
				
				
			}
			import cn.com.dhcc.fzep.topo.TopoXMLUtils;
			protected function genxml_clickHandler(event:MouseEvent):void
			{
				var sceneMgr:SceneManager = Root.instance.sceneManager;
				var stp:String = "";
				var entities:Array = sceneMgr.entityList();
				
				var xmldata:String = TopoXMLUtils.generateXML(entities);
				rs.text = entities.length.toString();
				for(var i:int = 0; i<entities.length; i++){
					var enti:Entity = entities[i];
					if(enti is FlexComponent){
						var ps:FlexComponent = enti as FlexComponent;
						stp += (ps.name +"(" + ps.x + "," + ps.y +")");
					}
				}
				rs.text =  xmldata;
			}
			
		]]>
	</fx:Script>
	<s:Group width="100%" height="100%" x="0" y="28">
		<xtreme:XtremeComponent name="view" id="view" width="100%" height="100%" />
	</s:Group>
	<s:Button id="genxml" click="genxml_clickHandler(event)">
		<fx:String>得到car坐标</fx:String>
	</s:Button>
	<s:TextArea id="rs" x="100" y="0" >
		<fx:String>cd</fx:String>
	</s:TextArea>
</s:Application>
