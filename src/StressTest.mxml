<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:xtreme="xtreme.core.*"
			   width="100%" height="100%"
			   minWidth="955" minHeight="600" frameRate="30"
			   applicationComplete="applicationComplete()">
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace xtreme "xtreme.core.*";
	</fx:Style>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.ux.core.Console;
			import flash.ux.core.Logger;
			
			import xtreme.core.EffectGenerator;
			import xtreme.scene.LayerManager;
			import xtreme.test.StressTest;

			private var _test:xtreme.test.StressTest;

			private function applicationComplete() : void
			{
				stage.align = StageAlign.TOP_LEFT;
				stage.scaleMode = StageScaleMode.NO_SCALE;
				stage.quality = StageQuality.HIGH;

				//framework.setElementIndex(toolbar, framework.numElements - 1);

				this.contextMenu.hideBuiltInItems();

				var console:Console = Console.instance;
				if (console == null)
					console = new Console(stage);

				view.getRoot().layerManager.enableContextMenu();

				view.registerBuildInCommand(console);

				//view.getRoot().effectGenerator.showViewportBackground();
				view.getRoot().navigationView.visible = true;

				_test = new xtreme.test.StressTest();
				
				/*this.addEventListener(KeyboardEvent.KEY_DOWN, function(event:KeyboardEvent):void {
					trace("code:" + event.keyCode);
				});*/
			}

			private function effectTest1(event:MouseEvent) : void
			{
//				view.getRoot().canvasVisible = false;
//				EffectGenerator.instance.zoomOutCanvas(0.75, 0, function():void {
//					EffectGenerator.instance.zoomInCanvas(0.75, 0, function():void {
//						view.getRoot().canvasVisible = true;
//					});
//				});
			}

			private function effectTest2(event:MouseEvent) : void
			{
				//view.getRoot().canvasVisible = false;
//				EffectGenerator.instance.flipCanvas();
			}

			private function testCase1(event:MouseEvent) : void
			{
				var time:Number = _test.testCase1();
				Logger.info(this, "testCase1", "添加实体耗时：" + time + " ms");
			}

			private function testCase2(event:MouseEvent) : void
			{
				var time:Number = _test.testCase2();
			}
		]]>
	</fx:Script>
	<s:Group id="framework" width="100%" height="100%">
		<s:BorderContainer id="toolbar" width="100%" height="28" borderVisible="false" backgroundColor="0xFFFFFF">
			<s:layout>
				<s:HorizontalLayout gap="4" />
			</s:layout>
			<s:Button label="测试用例1" click="testCase1(event)" />
			<s:Button label="测试用例2" click="testCase2(event)" />
			
			<!--<s:Button label="效果测试1" click="effectTest1(event)" />
			<s:Button label="效果测试2" click="effectTest2(event)" />-->
		</s:BorderContainer>
		<s:Group width="100%" height="100%" x="0" y="28">
			<xtreme:XtremeComponent name="view" id="view" width="100%" height="100%" />
		</s:Group>
	</s:Group>
</s:Application>
